// Generated by view binder compiler. Do not edit!
package com.refunnnn.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.refunnnn.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGiftDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnBackGiftDetail;

  @NonNull
  public final TextView giftDescText;

  @NonNull
  public final ImageView giftImageDetail;

  @NonNull
  public final TextView giftNameText;

  @NonNull
  public final TextView giftPointsText;

  @NonNull
  public final Button redeemButton;

  private FragmentGiftDetailBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView btnBackGiftDetail, @NonNull TextView giftDescText,
      @NonNull ImageView giftImageDetail, @NonNull TextView giftNameText,
      @NonNull TextView giftPointsText, @NonNull Button redeemButton) {
    this.rootView = rootView;
    this.btnBackGiftDetail = btnBackGiftDetail;
    this.giftDescText = giftDescText;
    this.giftImageDetail = giftImageDetail;
    this.giftNameText = giftNameText;
    this.giftPointsText = giftPointsText;
    this.redeemButton = redeemButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGiftDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGiftDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gift_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGiftDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackGiftDetail;
      ImageView btnBackGiftDetail = ViewBindings.findChildViewById(rootView, id);
      if (btnBackGiftDetail == null) {
        break missingId;
      }

      id = R.id.giftDescText;
      TextView giftDescText = ViewBindings.findChildViewById(rootView, id);
      if (giftDescText == null) {
        break missingId;
      }

      id = R.id.giftImageDetail;
      ImageView giftImageDetail = ViewBindings.findChildViewById(rootView, id);
      if (giftImageDetail == null) {
        break missingId;
      }

      id = R.id.giftNameText;
      TextView giftNameText = ViewBindings.findChildViewById(rootView, id);
      if (giftNameText == null) {
        break missingId;
      }

      id = R.id.giftPointsText;
      TextView giftPointsText = ViewBindings.findChildViewById(rootView, id);
      if (giftPointsText == null) {
        break missingId;
      }

      id = R.id.redeemButton;
      Button redeemButton = ViewBindings.findChildViewById(rootView, id);
      if (redeemButton == null) {
        break missingId;
      }

      return new FragmentGiftDetailBinding((LinearLayout) rootView, btnBackGiftDetail, giftDescText,
          giftImageDetail, giftNameText, giftPointsText, redeemButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
