// Generated by view binder compiler. Do not edit!
package com.refunnnn.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.refunnnn.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout quickActionCekHarga;

  @NonNull
  public final LinearLayout quickActionTukarPoin;

  @NonNull
  public final TextView userName;

  @NonNull
  public final TextView userPoints;

  private FragmentHomeBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout quickActionCekHarga, @NonNull LinearLayout quickActionTukarPoin,
      @NonNull TextView userName, @NonNull TextView userPoints) {
    this.rootView = rootView;
    this.quickActionCekHarga = quickActionCekHarga;
    this.quickActionTukarPoin = quickActionTukarPoin;
    this.userName = userName;
    this.userPoints = userPoints;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.quickActionCekHarga;
      LinearLayout quickActionCekHarga = ViewBindings.findChildViewById(rootView, id);
      if (quickActionCekHarga == null) {
        break missingId;
      }

      id = R.id.quickActionTukarPoin;
      LinearLayout quickActionTukarPoin = ViewBindings.findChildViewById(rootView, id);
      if (quickActionTukarPoin == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.userPoints;
      TextView userPoints = ViewBindings.findChildViewById(rootView, id);
      if (userPoints == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, quickActionCekHarga,
          quickActionTukarPoin, userName, userPoints);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
