// Generated by view binder compiler. Do not edit!
package com.refunnnn.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.refunnnn.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryTransaksiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView recyclerBotol;

  @NonNull
  public final TextView txtLocation;

  @NonNull
  public final TextView txtTanggal;

  @NonNull
  public final TextView txtTotalBotol;

  @NonNull
  public final TextView txtTotalPoin;

  private ItemHistoryTransaksiBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView recyclerBotol, @NonNull TextView txtLocation,
      @NonNull TextView txtTanggal, @NonNull TextView txtTotalBotol,
      @NonNull TextView txtTotalPoin) {
    this.rootView = rootView;
    this.recyclerBotol = recyclerBotol;
    this.txtLocation = txtLocation;
    this.txtTanggal = txtTanggal;
    this.txtTotalBotol = txtTotalBotol;
    this.txtTotalPoin = txtTotalPoin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryTransaksiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryTransaksiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history_transaksi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryTransaksiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerBotol;
      RecyclerView recyclerBotol = ViewBindings.findChildViewById(rootView, id);
      if (recyclerBotol == null) {
        break missingId;
      }

      id = R.id.txtLocation;
      TextView txtLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtLocation == null) {
        break missingId;
      }

      id = R.id.txtTanggal;
      TextView txtTanggal = ViewBindings.findChildViewById(rootView, id);
      if (txtTanggal == null) {
        break missingId;
      }

      id = R.id.txtTotalBotol;
      TextView txtTotalBotol = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalBotol == null) {
        break missingId;
      }

      id = R.id.txtTotalPoin;
      TextView txtTotalPoin = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalPoin == null) {
        break missingId;
      }

      return new ItemHistoryTransaksiBinding((LinearLayout) rootView, recyclerBotol, txtLocation,
          txtTanggal, txtTotalBotol, txtTotalPoin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
